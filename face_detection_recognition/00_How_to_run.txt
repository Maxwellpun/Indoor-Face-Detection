ไฟล์ที่ใช้งานทั้งหมดในงาน face recognition และคู่มือการใช้งาน

# ส่วนที่รันแสดงผลขั้นสุดท้าย
app_v2.py           สำหรับ Run flask หลักเพื่อให้โปรแกรมทำงาน
faceRec000.py       สำหรับ โปรแกรมตรวจจับและรู้จำใบหน้า face recognition
                        ประกอบไปด้วยฟังก์ชันของกล้องแต่ละตัวแสดงผลด้วย openCV 
                        แล้วแปลงเป็นภาพ jpec เพื่อส่งไปแสดงผลต่อที่ flask
                        function: faceRec, faceRec2, faceRec3

                        พร้อมด้วย request ส่งข้อมูลที่ได้ไปยัง nodered เพื่อติดต่อกับฐานข้อมูล influx
                        ใช้บันทึกข้อมูลชื่อบุคคล สถานที่ และ timestamp 
                        โดยไม่เก็บข้อมูลรูปภาพ เนื่องจากมีการ train เอาไว้แล้ว 
                        คงไว้แค่"ชื่อ"ของบุคคลใน train_img โดยไม่จำเป็นต้องมีภาพก็ได้ 
                        !!แต่ควรเก็บภาพไว้ให้ครบเพื่อการ train ครั้งถัดไป
                        ที่สำคัญกับการ train คือ model และ classifier.plk กับ npy โฟลเดอร์
                        การ train จะสร้าง classifier.plk และ ไฟล์ npy ในการ train แต่ละครั้งมาใช้อ้างอิง
                        ในโปรแกรมจริง

# ส่วนสำคัญในการ train face recognition สำหรับใบหน้าต่างๆ ที่มาหลักจากช่อง youtube *****
เน้นใช้งานโมเดล face recognition ของ faceNet และ tensor flow เป็นหลัก โดยโมเดลที่ใช้นำมาจาก github ******
ซึ่งได้ใช้ข้อมูลใบหน้าของ ******* ในการ train ใช้งานร่วมกับ facenet.py เพื่อการรู้จำใบหน้าเป็นหลัก
ในส่วนการตรวจจับใบหน้าบุคคล detection จะใช้ datect_face.py สำหรับตรวจหาใบหน้าบึคคลทั่วไปโดยไม่แยกแยะบุคคล

1. ให้สร้างโฟลเดอร์ train_img ขั้นมา แล้วใส่ภาพของบุคคลที่ต้องการจำลงไปในโฟลเดอร์ที่แยกตามชื่อบุคคลนั้นๆ
    โดยจะใส่กี่ภาพก็ได้แต่ควรเป็นภาพในหลายๆมุม(ช่วยเพิ่มความแม่นยำ) ทั้งหน้าตรง และหน้าหันข้างในองศาต่างๆ รวมถังองศาก้มเงยเล็กน้อย
2. สร้างโฟลเดอร์ model แล้วนำโมเดลของ faceNet ที่ใช้ในที่นี้มาใส่ 
3. สร้างโฟลเดอร์ aligned_img สำหรับ Crop ภาพใบหน้าจากภาพใน train_img โดยตีกรอบเฉพาะใบหน้าเท่านั้น 
4. สร้างโฟลเดอร์ class เพื่อเก็บไฟล์ classifier.pkl 

ไฟล์พื้นฐานของระบบได้แก่
1. facenet.py       เป็นฟังก์ชันของ faceNet ในการสร้างระบบ face recognition 
2. detect_face.py   ซึ่งเป็นส่วนที่ใช้ตรวจจับใบหน้าของ tensorflow เป็น face detection / alignment algorithm
                    ที่ใช้ Multi-task Cascaded Convolutional Neural Networks หรือ MTCNN
!!! โดยไฟล์ทั้งสองนั้นหยิบยกมาจากผู้สร้าง David Sandberg ภายใต้ copyright MIT License (สัญญาอนุญาตของสถาบันเทคโนโลยีแมสซาชูเซตส์) 
    ดังแสดงไว้ที่ส่วนหัวของไฟล์ทั้งสอง
3. preprocess.py 
4. classifier.py    เป็นส่วนหลักสำหรับการ train โมเดล face recognition เพือจดจำใบหน้าเฉพาะของบุคคล 
                    กระบวนการสำคัญเช่น embeddings และการ obtimize คำนวณ distance ผ่านโมเดลของ faceNet


ลำดับการเปิดใช้ไฟล์ในการ train
1. data_preprocess.py เป็นตัวกลางที่ใช้ฟังก์ชันจาก preprocess.py ช่วยจัดการดึงรูปภาพจาก train_img
    มาตรวจจับใบหน้าผ่าน preprocess แล้วทำการ align ตัดภาพเฉพาะหรอบใบหน้าใส่ใน aligned_img 
    แล้วบันทึกไฟล์ของ MTCNN ลงไปที่โฟลเดอร์ npy บันทึกเป็น det1.npy หรือ det2 det3 ตามรอบที่ Run
2. เมื่อได้ภาพที่ถูก align แล้ว Run train_main.py เป็นขั้นตอนสุดท้าย
    train_main จะทำการสร้าง classifier.pkl ลงในโฟลเดอร์ class ผ่านฟังก์ชันจาก classifier.py 
    จะเป็นการบันทึการ train ข้อมูลใบหน้ารายบุคคลเป็นไว้เป็น class เพื่อนำไปจำแนกต่อไปในโปรแกรมหลัก
    ในขั้นตอนนี้จะใช้ฟังก์ชันของ faceNet และ model สำหรับการรู้จำใบหน้า กับข้อมูลจาก aligned_img 
ถือเป็นการเสร้ขสิ้นการ train โมเดล face recognition



